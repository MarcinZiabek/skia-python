name: Skia build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  prebuild_linux_aarch64_3rd_party:
    name: Build skia bundled 3rd-party on linux/aarch64
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        id: cache-skia
        with:
          path: |
            gn
            skia
          key: linux-aarch64-skia-${{ github.sha }}-3rd-party
      - name: Pre-fetch skia deps
        run: git config --global core.compression 0 && cd skia && patch -p1 -i ../patch/skia-m119-minimize-download.patch && python tools/git-sync-deps && patch -p1 -R -i ../patch/skia-m119-minimize-download.patch
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Build skia 3rd-Party
        # Taken from https://github.com/pypa/cibuildwheel/blob/v2.16.2/cibuildwheel/resources/pinned_docker_images.cfg
        uses: docker://quay.io/pypa/manylinux2014_aarch64:2023-10-03-72cdc42
        if: ${{ steps.cache-skia.outputs.cache-hit != 'true' }}
        with:
          args: bash -c "git config --global --add safe.directory '*' &&
                         bash scripts/build_Linux.sh &&
                         chmod a+rwx -R skia"

  prebuild_linux_aarch64:
    name: Build skia on linux/aarch64
    needs: prebuild_linux_aarch64_3rd_party
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        id: cache-skia
        with:
          path: |
            gn
            skia
          key: linux-aarch64-skia-${{ github.sha }}
      - uses: actions/cache/restore@v3
        with:
          path: |
            gn
            skia
          key: linux-aarch64-skia-${{ github.sha }}-3rd-party
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Build Skia Proper
        uses: docker://quay.io/pypa/manylinux2014_aarch64:2023-10-03-72cdc42
        with:
          args: bash -c "git config --global --add safe.directory '*' &&
                         bash scripts/build_Linux.sh
      - name: download results
        uses: actions/upload-artifact@v3
        with:
          path: ./out/
